html {
    background: #b3b3b3;
    padding: 15px;
    border: 5px solid white;
    margin: 15px;
    height: 2000px;
}

body {
    background: white;
    padding: 20px;
    border: 5px solid black;
    margin: 0;
    height: 400px;
}
  
.navigation, .headline, .contact-us {
    padding: 20px;
    border: 5px solid black;
    margin: 10px;
    position: fixed;
}
  
.headline div {
    background: rgb(105, 105, 109);
    color: white;
    padding: 10px;
    border: 5px solid black;
    margin: 10px;
    width: 130px;
}

.navigation {
    background: rgb(255, 109, 109);
    top: 100px;
    left: 100px;
    width: 300px;
}

.headline { 
    background: rgb(77, 77, 248);
    top: 150px;
    left: 150px;
    width: 270px;
    height: 200px;

}

.contact-us {
    background: rgb(69, 214, 69);
    top: 180px;
    left: 320px;
    width: 180px;
}

.image-1 {
    top: 200px;
    left: 230px; 
}

.image-2 {
    position: fixed;
    top: 230px;
    left: 260px;
    /*a child cannot go beyond its parent element */
    /* z-index: -4; */
    /* this image has its parent element referenced with class ".headline", so, its stacking context is '.headline' class element, and hence, the child element of this stacking context can never go out of an element's z-index which is already above its parent element, in our case, '.contact-us' class element's z-index is above this '.image-2' parent's z-index, hence, no matter how higher the z-index of this child element's value is compared to the '.contact-us' class element, this child element can never come over it */
    z-index: 200;
}

.image-3 {
    left: 300px;
    top: 260px;
}